public class Weapon
{
    private readonly int _damage;
    private int _bullets;

    public Weapon(int damage, int bullets)
    {
        if(damage <= 0)
            throw new ArgumentException("Урон должен быть больше 0.", nameof(damage));

        if(bullets < 0)
            throw new ArgumentException("Пули не могут быть отрицательными.", nameof(bullets));

        _damage = damage;
        _bullets = bullets;
    }

    public bool HasBullets()
    {
        return _bullets > 0;
    }

    public void Fire(Player player)
    {
        if(player == null)
        {
            throw new ArgumentNullException(nameof(player));
        }

        if (!HasBullets())
        {
            throw new InvalidOperationException("Не осталось пуль для выстрела.");
        }

        if (HasBullets())
        {
            player.TakeDamage(_damage);
            _bullets -= 1;
        }
    }
}

public class Player
{
    private int _health;

    public Player(int health)
    {
        if(health <= 0)
            throw new ArgumentException("Здоровье должно быть больше 0.", nameof(health));

        _health = health;
    }

    public void TakeDamage(int amount)
    {
        if (amount <= 0)
            throw new ArgumentException("Сумма урона должна быть больше 0.", nameof(amount));

        _health -= amount;

        if (_health <= 0)
            _health = 0;
    }
}

public class Bot
{
    private readonly Weapon _weapon;

    public Bot(Weapon weapon)
    {
        _weapon = weapon;
    }

    public void OnSeePlayer(Player player)
    {
        if(player == null)
            throw new ArgumentNullException(nameof(player));

        if (_weapon.HasBullets())
            _weapon.Fire(player);
    }
}
